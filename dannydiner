/* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?
-- 2. How many days has each customer visited the restaurant?
-- 3. What was the first item from the menu purchased by each customer?
-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
-- 5. Which item was the most popular for each customer?
-- 6. Which item was purchased first by the customer after they became a member?
-- 7. Which item was purchased just before the customer became a member?
-- 8. What is the total items and amount spent for each member before they became a member?
-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

--ANSWER
--1
select m.customer_id, sum(mm.price) as totalspent
from members as m
inner join sales as s
on
m.customer_id = s.customer_id
inner join menu as mm
on
mm.product_id = s.product_id
group by m.customer_id

--2
select m.customer_id, count(distinct s.order_date)
from members as m
inner join sales as s
on m.customer_id = s.customer_id 
group by m.customer_id 

--3
select distinct(customer_id), 
       product_name
from sales s
join menu m 
on
m.product_id = s.product_id
where s.order_date = any 
      (
       select min(order_date)
from sales
group by customer_id
      )
order by customer_id

--4

select m.product_name, count(m.product_name)
from menu as m
inner join sales as s 
on m.product_id = s.product_id 
group by m.product_name 
limit 1

-- 5. Which item was the most popular for each customer?
with t1 as(
select s.customer_id, m.product_name,count(m.product_id),dense_rank()over(partition by s.customer_id order by count(m.product_id) desc) as rn
from sales as s
inner join menu as m 
on s.product_id = m.product_id 
group by 1,2
)
select
from t1
where rn = 1;

-- 6. Which item was purchased first by the customer after they became a member?
select m.customer_id, mm.product_name , s.order_date  
from members as m 
left join sales as s 
on m.customer_id = s.customer_id 
left join menu as mm
on s.product_id = mm.product_id 
where s.order_date = any
(select min(order_date) from sales group by customer_id)

-- 7. Which item was purchased just before the customer became a member?
select *
from(
select s.customer_id, m.product_name, s.order_date, dense_rank()over(partition by s.customer_id order by s.order_date) as rank, m2.join_date  
from sales as s
join menu as m 
on s.product_id = m.product_id 
join members as m2 
on m2.customer_id = s.customer_id 
where s.order_date < m2.join_date 
)t1 
where rank = 1;

-- 8. What is the total items and amount spent for each member before they became a member?
select m2.customer_id, count(distinct m.product_name), sum(m.price) as amountspent
from sales as s 
join menu as m 
on s.product_id = m.product_id 
join members as m2 
on m2.customer_id = s.customer_id
where s.order_date < m2.join_date
group by m2.customer_id
order by customer_id 

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
select customer_id,sum(point) 
from(
select s.customer_id, case when m.product_name = 'sushi' then price * 20 when m.product_name != 'sushi' then price * 10 end as point
from sales as s
join menu as m 
on s.product_id = m.product_id 
)t1
group by 1

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

WITH dates_cte AS 
(
 SELECT *, 
  m.join_date + 6 AS valid_date, 
  --EOMONTH('2021-01-31') AS last_date
  date_trunc('month', m.join_date) + interval '30 day' as last_date
 FROM members AS m
)

SELECT d.customer_id, s.order_date, d.join_date, 
 d.valid_date, d.last_date, m.product_name, m.price,
 SUM(CASE
  WHEN m.product_name = 'sushi' THEN 2 * 10 * m.price
  WHEN s.order_date BETWEEN d.join_date AND d.valid_date THEN 2 * 10 * m.price
  ELSE 10 * m.price
  END) AS points
FROM dates_cte AS d
JOIN sales AS s
 ON d.customer_id = s.customer_id
JOIN menu AS m
 ON s.product_id = m.product_id
WHERE s.order_date < d.last_date
GROUP BY d.customer_id, s.order_date, d.join_date, d.valid_date, d.last_date, m.product_name, m.price

